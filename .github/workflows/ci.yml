name: CI

on:
  push:
    branches: [ develop ]
    tags:
      - v*
  pull_request:
    branches: [ $default-branch, uat ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    permissions:
      packages: write
      actions: write
      contents: read
<<<<<<< HEAD
=======

    env:
      image_tag: latest
>>>>>>> master

    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - uses: actions/checkout@v4

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --ignore=E111
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    #- name: Test with pytest
    #  run: |
    #    pytest

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: skoval67
        password: ${{ secrets.GITHUB_TOKEN }}

    - uses: benjlevesque/short-sha@v3.0
      with:
        length: 7
 
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5.7.0
      with:
        images: |
          ghcr.io/skoval67/easybot
        flavor: |
          latest=true
        tags: |
          type=semver,pattern=v{{version}}
          type=sha,prefix=

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        push: true
        tags: ${{ steps.meta.outputs.tags }}
<<<<<<< HEAD

    - name: Stack Deploy
      if: github.event_name == 'push'
      uses: cssnr/stack-deploy-action@v1
      env:
        image_tag: latest
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        RAPID_API_KEY: ${{ secrets.RAPID_API_KEY }}
      with:
        name: tgbot
        file: docker-compose.yaml
        host: ${{ secrets.SSH_HOST }}
        user: ${{ secrets.SSH_USER }}
        ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
        detach: false
        registry_host: ghcr.io
        registry_user: skoval67
        registry_pass: ${{ secrets.GITHUB_TOKEN }}
        summary: true

=======

    - name: Stack Deploy
      if: github.event_name == 'push'
      uses: cssnr/stack-deploy-action@v1
      env:
        image_tag: latest
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        RAPID_API_KEY: ${{ secrets.RAPID_API_KEY }}
      with:
        name: tgbot
        file: docker-compose.yaml
        host: ${{ secrets.SSH_HOST }}
        user: ${{ secrets.SSH_USER }}
        ssh_key: ${{ secrets.SSH_PRIVATE_KEY }}
        detach: false
        registry_host: ghcr.io
        registry_user: skoval67
        registry_pass: ${{ secrets.GITHUB_TOKEN }}
        summary: true

>>>>>>> master
    - name: GHCR Pruning
      uses: vlaurin/action-ghcr-prune@v0.6.0
      with:
        token: ${{ secrets.GH_PAT }}
        user: skoval67
        container: easybot
        #prune-untagged: true
        keep-last: 3
        keep-tags-regexes: |
          ^v
        prune-tags-regexes: |
          ^[0-9a-f]

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 0
        keep_minimum_runs: 2
